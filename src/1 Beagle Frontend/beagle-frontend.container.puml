@startuml
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml

LAYOUT_WITH_LEGEND()

System_Boundary(bf, "Beagle Frontend") {
    Container(beagle_action, "Beagle Actions", "typescript, kotlin, swift", "Handles multiples application behaviors")
    Container(beagle_operation, "Beagle Operations", "typescript, kotlin, swift", "Enables the use of logical operations")
    Container(beagle_service, "Beagle Service / Config", "typescript, kotlin, swift", "Allows customization of functionalities")
    Container(beagle_loader, "Beagle Loader", "typescript, kotlin, swift", "Starting point to render beagle screens")
    Container(beagle_components, "Beagle Components", "typescript, kotlin, swift", "Ready-to-use interface components such as buttons or inputs")

    
    Rel(beagle_loader, beagle_service, "Gets Configurations from")
    Rel(beagle_components, beagle_operation, "Sends Operation Data")
    Rel(beagle_operation, beagle_components, "Receives Operation Results")
    Rel(beagle_components, beagle_action, "Triggers actions")
    Rel(beagle_loader, beagle_components, "Loads")
}

System_Boundary(beagle_backend, "Beagle Backend") {
    Container(fea, "FEATURE A", "technology", "Description")
    Container(feb, "FEATURE B", "technology", "Description")
    Container(fec, "FEATURE C", "technology", "Description")
}

System_Ext(frontend_app, "Frontend Application", "A frontend platform that renders the screens")

Rel(beagle_backend, frontend_app, "Sends JSON to", "HTTPS")
Rel(frontend_app, beagle_loader, "Renders With", "JSON")
@enduml
